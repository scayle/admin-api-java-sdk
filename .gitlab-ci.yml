stages:
  - deploy

default:
  image: openjdk:11-jdk-buster # Changed: Using an image with OpenJDK 11 pre-installed (Debian Buster based)
  services:
    - docker:dind
  tags:
    - $GITLAB_CI_RUNNER_AMD
  before_script:
    - apt-get update && apt-get install -y --no-install-recommends gnupg # Install gnupg for GPG signing
    - echo "--- Contents of build.gradle being used by CI ---"
    - cat build.gradle
    - echo "--- End of build.gradle content ---"
    - sh ./gradlew clean --stacktrace --info

.deploy_template: &deploy_template
  stage: deploy
  script:
    # we expect tags to be in the format v1.2.3
    - export ORG_GRADLE_PROJECT_version="${CI_COMMIT_TAG/v}"
    - sed -i "0,/SDK_VERSION_PLACEHOLDER/s//${ORG_GRADLE_PROJECT_version}/" ./src/main/java/com/scayle/adminapi/http/HttpClient.java
    - export ORG_GRADLE_PROJECT_environment
    - export ORG_GRADLE_PROJECT_nexusUsername
    - export ORG_GRADLE_PROJECT_nexusPassword
    - export ORG_GRADLE_PROJECT_signingKey
    - export ORG_GRADLE_PROJECT_signingKeyId
    - export ORG_GRADLE_PROJECT_signingPassword
    - sh ./gradlew publish -Penvironment="${ORG_GRADLE_PROJECT_environment}" --stacktrace --info
  only:
    - tags
  when: manual

deploy:snapshot:
  <<: *deploy_template
  variables:
    ORG_GRADLE_PROJECT_environment: snapshot

deploy:release:
  <<: *deploy_template
  variables:
    ORG_GRADLE_PROJECT_environment: release
